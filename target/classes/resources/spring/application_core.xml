<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--启用spring 注释扫描-->
    <context:component-scan base-package="com.lhl.springmvc.service"/>
    <context:component-scan base-package="com.lhl.springmvc.dao"/>
    <!--引入属性文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${jdbc_url}"/>
        <property name="username" value="${jdbc_username}"/>
        <property name="password" value="${jdbc_password}"/>
        <!--配置初始化大小，最小，最大-->
        <property name="initialSize" value="1"/>
        <property name="maxActive" value="5"/>
        <property name="minIdle" value="1"/>
        <!--获取连接等待时间-->
        <property name="maxWait" value="60000"/>
        <!--配置监控统计拦截的filter-->
        <property name="filters" value="stat"/>
        <!--间隔多久进行一次检测，检测需要关闭的连接，单位是毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!--配置一个连接池最小的生存时间，单位是毫秒-->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!--不清楚具体是什么配置-->
        <!--   <property name="validationQuery"><value>SELECT 'x'</value></property>
           <property name="testWhileIdle"><value>true</value></property>
           <property name="testOnBorrow"><value>false</value></property>
           <property name="testOnReturn"><value>false</value></property>
           <property name="poolPreparedStatements"><value>true</value></property>
           <property name="maxOpenPreparedStatements"><value>20</value></property>-->
    </bean>
    <!--配置spring的事物管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 拦截器方式配置事物 start-->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="append*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="modify*" propagation="REQUIRED"/>
            <tx:method name="edit*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="repair" propagation="REQUIRED"/>
            <tx:method name="delAndRepair" propagation="REQUIRED"/>

            <tx:method name="get*" propagation="SUPPORTS"/>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="load*" propagation="SUPPORTS"/>
            <tx:method name="search*" propagation="SUPPORTS"/>
            <tx:method name="datagrid*" propagation="SUPPORTS"/>

            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.lhl.springmvc.service..*Impl.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice"/>
    </aop:config>
    <!--  拦截器方式配置事物 end-->
    <!--    配置druid监控spring jdbc-->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>com.lhl.springmvc.service.*</value>
                <value>com.lhl.springmvc.dao.*</value>
            </list>
        </property>
    </bean>
    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut"/>
    </aop:config>

    <!-- 配置mybatis-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描com/lhl/springmvc/entity目录下的所有SQL映射的xml文件, 省掉Configuration.xml里的手工配置
        value="classpath:com/lhl/springmvc/entity/*.xml"指的是classpath(类路径)下com.lhl.springmvc.entity包中的所有xml文件
        UserMapper.xml位于com.lhl.springmvc.entity包下，这样UserMapper.xml就可以被自动扫描
         -->
        <property name="mapperLocations" value="classpath*:com/lhl/springmvc/entity/*.xml"/>
    </bean>
    <!--配置扫描器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描com.lhl.springmvc.dao这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="com.lhl.springmvc.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
    </bean>
    <!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
         <property name="mapperInterface" value="com.lhl.springmvc.dao.user.UserMapper" />
         <property name="sqlSessionFactory" ref="sessionFactory" />

     </bean>-->
</beans>